package ajbc.webService.rest.API_Demo.server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import com.google.gson.Gson;

import ajbc.webService.rest.API_Demo.DBservice.DBService;
import ajbc.webService.rest.API_Demo.models.IOTThing;


public class ServerThread implements Runnable {
	private Socket clientSocket;
	private DBService db;
	
	
	public ServerThread(Socket clientSocket) {
		this.clientSocket = clientSocket;
		db=new DBService();
		
	}

	@Override
	public void run() {

		try (BufferedReader bufferReader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
				PrintWriter writer = new PrintWriter(clientSocket.getOutputStream(), true);) {

			System.out.println("Thing is connected " + clientSocket.getInetAddress() + " port " + clientSocket.getPort());
			
			
			// reading data
			Gson gson = new Gson();
			String line = bufferReader.readLine();
			IOTThing thing = gson.fromJson(line, IOTThing.class);
			
			
//			 processing data simulation
			try {
				db.updateDB(thing);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			// sending data
			writer.println("Thing number "+thing.getID()+" seved" );
		
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}


}
