package ajbc.webService.rest.API_Demo.DB;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

import ajbc.webService.rest.API_Demo.models.Course;
import ajbc.webService.rest.API_Demo.models.Student;

public class MyDB {
	private static MyDB instance = null;
	private Map<Long, Student> students;
	private Map<Long, Course> courses;

	public static synchronized MyDB getInstance() {
		if (instance == null)
			instance = new MyDB();
		return instance;
	}

	private MyDB() {
		students = new HashMap<Long, Student>();
		// seeding the db
		seedStudent();
		seedCourse();
		updateStudentsWithCourse();
	}

	private void seedStudent() {
		List<Student> studentList = Arrays.asList(
				new Student("Moses", "OOfnik", 88.9),
				new Student("Happy", "Roller", 75.6), 
				new Student("Gabby", "Dice", 98.1),
				new Student("Charles", "Samson", 78.9), 
				new Student("Rachel", "Palace", 89.2));
		
		students = studentList.stream().collect(Collectors.toMap(Student::getID, Function.identity()));
	}
	
	private void seedDevices() {

		List<Device> devices = new LinkedList<>();

		things.forEach((id, thing) -> {
			for (int i = 0; i < NUM_DEVICES_FOR_THNIG; i++) {
				Device device = new Device();
				thing.addDevice(device);
				devices.add(device);
			}
		});

		this.devices = devices.stream().collect(Collectors.toMap(Device::getID, Function.identity()));
	}
	
	
}
