package ajbc.webService.rest.API_Demo.server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonParser;

import ajbc.webService.rest.API_Demo.DB.DBMock;
import ajbc.webService.rest.API_Demo.DB.MyDB;
import ajbc.webService.rest.API_Demo.models.IOTThing;


public class ServerThread implements Runnable {
	private Socket clientSocket;
	private DBMock db;
	
	
	public ServerThread(Socket clientSocket) {
		this.clientSocket = clientSocket;
		db = DBMock.getInstance();
	}

	@Override
	public void run() {

		try (BufferedReader bufferReader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
				PrintWriter writer = new PrintWriter(clientSocket.getOutputStream(), true);) {

			System.out.println("Thing is connected " + clientSocket.getInetAddress() + " port " + clientSocket.getPort());
			
			
			// reading data
			Gson gson = new Gson();
			String line = bufferReader.readLine();
			System.out.println(line);
			IOTThing thing = gson.fromJson(line, IOTThing.class);
			System.out.println(thing);
			
			

			// processing data simulation
			db.updateDB(thing);

			// sending data
			writer.println("Thing number "+thing.getID()+" seved" );
		
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private void updateDB() {
		
		
	}


}
